import Base from"../Base.js";import"../ea-icon/index.js";import"../ea-infinite-scroll-item/index.js";export class EaInfiniteScroll extends Base{#t;#e;constructor(){super();const t=this.attachShadow({mode:"open"});t.innerHTML="\n            <div class='ea-infinite_wrap' part='container'>\n                <slot></slot>\n            </div>\n            <div class='ea-infinite_loading-wrap' part='loading-wrap'>\n                <slot name='loading' style=\"display: none;\"></slot>\n            </div>\n            <div class='ea-infinite_noMore-wrap' part='noMore-wrap'>\n                <slot name='noMore' style=\"display: none;\"></slot>\n            </div>\n        ",this.#t=t.querySelector('slot[name="loading"]'),this.#e=t.querySelector('slot[name="noMore"]')}get delay(){return this.getAttrNumber("delay")||200}set delay(t){this.setAttribute("delay",t)}get loading(){return this.getAttrBoolean("loading")}set loading(t){void 0!==t&&this.setAttribute("loading",t)}get disabled(){return this.getAttrBoolean("disabled")||!1}set disabled(t){this.setAttribute("disabled",t),t&&(this.#e.style.display="block")}#i(){const t=this.querySelectorAll("ea-infinite-item");return t[t.length-1]}#n(){if(this.disabled)return;let t=this.#i(),e=null;const i=new IntersectionObserver((n=>{const{isIntersecting:o}=n[0];this.disabled?i.disconnect():o&&!e&&(this.loading&&(this.#t.style.display="block"),i.unobserve(t),e=setTimeout((()=>{this.dispatchEvent(new CustomEvent("bottomReached")),clearTimeout(e),e=null,t=this.#i(),i.observe(t),this.#t.style.display="none"}),this.delay||200))}),{root:this.parentNode,rootMargin:"10px",threshold:.1});i.observe(t)}connectedCallback(){this.delay=this.delay,this.#n()}}customElements.get("ea-infinite")||customElements.define("ea-infinite",EaInfiniteScroll);